{"version":3,"sources":["global.js","mixins/index.js","routes/index.js","modules/layout/index.js","modules/layout/_api/index.js","layout/_store/actions.js","layout/_store/getters.js","layout/_store/mutations.js","layout/_store/state.js","store.js","layout/_components/footer.js","layout/_components/header.js","layout/_components/text.js"],"names":["Barba","Dispatcher","on","Vue","data","bLazy","MoveToInstance","MoveTo","tolerance","duration","formDictionary","_default","field","after","_ref","_ref2","_slicedToArray","target","alpha_dash","alpha_num","alpha_spaces","alpha","before","_ref3","_ref4","between","_ref5","_ref6","confirmed","credit_card","date_between","_ref7","_ref8","date_format","_ref9","decimal","_ref11","arguments","length","undefined","_ref12$","decimals","digits","_ref13","dimensions","_ref15","_ref16","email","ext","image","included","integer","ip","_ref17","_ref18","max","_ref19","max_value","_ref21","mimes","min","_ref23","min_value","_ref25","excluded","numeric","regex","required","size","_ref27","formatFileSize","url","directives","clickOutside","bind","el","binding","vNode","value","compName","context","name","warn","expression","console","bubble","modifiers","handler","e","contains","__vueClickOutside__","document","addEventListener","unbind","removeEventListener","methods","Init","this","Blazy","Veevalidate","Axios","_Blazy","apply","toString","breakpoints","width","src","_Barba","FadeTransition","BaseTransition","extend","start","Promise","all","newContainerLoading","fadeOut","then","fadeIn","resolve","reject","querySelector","className","window","setTimeout","oldContainer","style","display","scrollTo","classList","remove","done","Pjax","getTransition","use","VeeValidate","locale","events","classes","invalidateFalse","classNames","invalid","valid","dictionary","nl","messages","SmoothScroll","querySelectorAll","forEach","anchor","getAttribute","preventDefault","Listeners","move","axios","interceptors","response","error","mounted","created","cacheEnabled","Mixins","Routes","Layout","store","namespaced","components","api","actions","changeMenuExpanded","commit","getters","mutations","setMenuExpanded","state","menuExpanded","Vuex","Store","modules","getElementById","footer","formObj","formJSON","computed","destroyed","header","scrolled","get","log","$store","set","dispatch","text"],"mappings":"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","file":"app.min.js","sourcesContent":["Barba.Dispatcher.on(\"transitionCompleted\", function () {\r\n    let Global = new Vue({\r\n        data() {\r\n            return {\r\n                bLazy: null,\r\n                MoveToInstance: new MoveTo({\r\n                    tolerance: 100,\r\n                    duration: 800\r\n                }),\r\n                formDictionary: {\r\n                    _default: (field) => `Dit veld is niet correct ingevuld.`,\r\n                    after: (field, [target, inclusion]) => `Dit veld moet groter ${inclusion ? 'of gelijk aan ' : ''} ${target}.`,\r\n                    alpha_dash: (field) => `Dit veld mag alleen alfanumerieke karakters, strepen en onderstrepingstekenen bevatten.`,\r\n                    alpha_num: (field) => `Dit veld mag alleen alfanumerieke karakters bevatten.`,\r\n                    alpha_spaces: (field) => `Dit veld mag alleen alfanumerieke karakters en spaties bevatten.`,\r\n                    alpha: (field) => `Dit veld mag alleen alfabetische karakters bevatten.`,\r\n                    before: (field, [target, inclusion]) => `De waarde van dit veld moet kleiner ${inclusion ? 'of gelijk aan' : ''} ${target} zijn.`,\r\n                    between: (field, [min, max]) => `De waarde van dit veld moet tussen ${min} en ${max} zijn.`,\r\n                    confirmed: (field) => `Dit bevestigingsveld komt niet overeen.`,\r\n                    credit_card: (field) => `Dit veld is ongeldig.`,\r\n                    date_between: (field, [min, max]) => `De datum moet tussen ${min} en ${max} zijn.`,\r\n                    date_format: (field, [format]) => `Dit veld moet het volgende formaat hebben: ${format}.`,\r\n                    decimal: (field, [decimals = '*'] = []) => `Dit veld mag alleen numerieke, en${!decimals || decimals === '*' ? ' ' : decimals}decimale nummers bevatten.`,\r\n                    digits: (field, [length]) => `Dit veld moet ${length} nummers bevatten.`,\r\n                    dimensions: (field, [width, height]) => `De dimensies voor dit veld moet ${width} pixels breed en ${height} pixels hoog zijn.`,\r\n                    email: (field) => `Dit veld moet een geldig e-mailadres bevatten.`,\r\n                    ext: (field) => `Dit veld moet een correct bestand bevatten.`,\r\n                    image: (field) => `Dit veld moet een afbeelding bevatten.`,\r\n                    included: (field) => `Dit veld moet een geldige waarde bevatten.`,\r\n                    integer: (field) => `Dit veld moet een nummer zijn.`,\r\n                    ip: (field) => `Dit veld moet een veilig ip adres zijn.`,\r\n                    length: (field, [length, max]) => {\r\n                        if (max) {\r\n                            return `Dit veld moet minimaal ${length} karakters en maximaal ${max} karakters bevatten.`;\r\n                        }\r\n\r\n                        return `Dit veld moet minimaal ${length} karakters lang zijn.`;\r\n                    },\r\n                    max: (field, [length]) => `Dit veld mag niet meer karakters bevatten dan ${length}.`,\r\n                    max_value: (field, [max]) => `Dit veld moet ${max} karakters of minder bevatten.`,\r\n                    mimes: (field) => `Dit veld moet Dit juiste type bestand bevatten.`,\r\n                    min: (field, [length]) => `Dit veld moet minimaal ${length} karakters zijn.`,\r\n                    min_value: (field, [min]) => `Dit veld moet minimaal ${min} karakters zijn.`,\r\n                    excluded: (field) => `Dit veld moet een geldige waarde bevatten`,\r\n                    numeric: (field) => `Dit veld mag alleen numerieke karakters bevatten.`,\r\n                    regex: (field) => `Dit veld is niet correct ingevoerd.`,\r\n                    required: (field) => `Dit veld is verplicht.`,\r\n                    size: (field, [size]) => `De bestandsgrootte van dit veld mag niet groter zijn dan ${formatFileSize(size)}.`,\r\n                    url: (field) => `Dit veld moet een valide URL zijn.`\r\n                },\r\n            }\r\n        },\r\n        directives: {\r\n            clickOutside: {\r\n                bind: function (el, binding, vNode) {\r\n                    // Provided expression must evaluate to a function.\r\n                    if (typeof binding.value !== 'function') {\r\n                        const compName = vNode.context.name;\r\n                        let warn = `[Vue-click-outside:] provided expression '${binding.expression}' is not a function, but has to be`;\r\n                        if (compName) {\r\n                            warn += `Found in component '${compName}'`\r\n                        }\r\n\r\n                        console.warn(warn)\r\n                    }\r\n                    // Define Handler and cache it on the element\r\n                    const bubble = binding.modifiers.bubble;\r\n                    const handler = (e) => {\r\n                        if (bubble || (!el.contains(e.target) && el !== e.target)) {\r\n                            binding.value(e)\r\n                        }\r\n                    };\r\n                    el.__vueClickOutside__ = handler;\r\n\r\n                    // add Event Listeners\r\n                    document.addEventListener('click', handler)\r\n                },\r\n                unbind: function (el, binding) {\r\n                    // Remove Event Listeners\r\n                    document.removeEventListener('click', el.__vueClickOutside__);\r\n                    el.__vueClickOutside__ = null\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            Init() {\r\n                this.Blazy();\r\n                this.Barba();\r\n                this.Veevalidate();\r\n                this.Axios();\r\n            },\r\n            Blazy() {\r\n                this.bLazy = new Blazy({\r\n                    breakpoints: [{\r\n                        width: 0,\r\n                        src: 'data-src-small'\r\n                    }, {\r\n                        width: 640,\r\n                        src: 'data-src-medium'\r\n                    }, {\r\n                        width: 1024,\r\n                        src: 'data-src-large'\r\n                    }, {\r\n                        width: 1200,\r\n                        src: 'data-src-xlarge'\r\n                    }, {\r\n                        width: 1440,\r\n                        src: 'data-src-xxlarge'\r\n                    }]\r\n                })\r\n            },\r\n            Barba() {\r\n                let FadeTransition = Barba.BaseTransition.extend({\r\n                    start: function () {\r\n                        // As soon the loading is finished and the old page is faded out, let's fade the new page\r\n                        Promise\r\n                            .all([this.newContainerLoading, this.fadeOut()])\r\n                            .then(this.fadeIn.bind(this));\r\n                    },\r\n                    fadeOut: function () {\r\n                        return new Promise((resolve, reject) => {\r\n                            document.querySelector('.barba-bg').className += ' barba-bg--visible';\r\n                            window.setTimeout(function () {\r\n                                resolve();\r\n                            }, 500);\r\n                        });\r\n                    },\r\n                    fadeIn: function () {\r\n                        let _this = this;\r\n                        (this.oldContainer).style.display = 'none';\r\n\r\n                        window.scrollTo(0, 0);\r\n\r\n                        document.querySelector('.barba-bg').classList.remove('barba-bg--visible');\r\n                        _this.done();\r\n                    }\r\n                });\r\n\r\n                Barba.Pjax.getTransition = function () {\r\n                    return FadeTransition;\r\n                };\r\n            },\r\n            Veevalidate() {\r\n                Vue.use(VeeValidate, {\r\n                    locale: 'nl',\r\n                    events: 'blur|submit|change',\r\n                    classes: true,\r\n                    invalidateFalse: true,\r\n                    classNames: {\r\n                        invalid: 'input--invalid',\r\n                        valid: 'input--valid'\r\n                    },\r\n                    dictionary: {\r\n                        nl: {messages: this.formDictionary}\r\n                    }\r\n                });\r\n            },\r\n            SmoothScroll() {\r\n                document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n                    if (anchor.getAttribute('href').length > 1) {\r\n                        anchor.addEventListener('click', function (e) {\r\n                            e.preventDefault();\r\n\r\n                            let target = document.querySelector(this.getAttribute('href'));\r\n                            Listeners.MoveToInstance.move(target);\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            Axios() {\r\n                // Add a response interceptor\r\n                axios.interceptors.response.use(function (response) {\r\n                    // Do something with response data\r\n                    return response;\r\n                }, function (error) {\r\n                    // Do something with response error\r\n                    // todo error handling\r\n                    return Promise.reject(error);\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.Init();\r\n        },\r\n        created() {\r\n            this.Init();\r\n        }\r\n    });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    Barba.Pjax.cacheEnabled = false;\r\n    Barba.Pjax.start();\r\n});\r\n","let Mixins = {};","const Routes = {\r\n};","let Layout = {\r\n    store: {\r\n        namespaced: true\r\n    },\r\n    components: {},\r\n    api: {}\r\n};","Layout.api = {\r\n};\r\n","Layout.store.actions = {\r\n    changeMenuExpanded({commit}, value) {\r\n        commit('setMenuExpanded', value)\r\n    },\r\n};","Layout.store.getters = {\r\n};","Layout.store.mutations = {\r\n    setMenuExpanded(state, value) {\r\n        state.menuExpanded = value;\r\n    },\r\n};","Layout.store.state = {\r\n    menuExpanded: false\r\n};","const store = new Vuex.Store({\r\n    modules: {\r\n        Layout: Layout.store,\r\n    }\r\n});","Barba.Dispatcher.on(\"transitionCompleted\", function () {\r\n    if (document.getElementById('footer')) {\r\n        Layout.components.footer = new Vue({\r\n            el: document.getElementById(\"footer\"),\r\n            store,\r\n            data: function () {\r\n                return {\r\n                    formObj: {},\r\n                    formJSON: {}\r\n                }\r\n            },\r\n            computed: {},\r\n            mounted: function () {\r\n            },\r\n            methods: {\r\n            },\r\n            created: function () {\r\n            },\r\n            destroyed: function () {\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n","Barba.Dispatcher.on(\"transitionCompleted\", function () {\r\n    if (document.getElementById('header')) {\r\n        Layout.components.header = new Vue({\r\n            el: document.getElementById(\"header\"),\r\n            store,\r\n            data: function () {\r\n                return {\r\n                    scrolled: false\r\n                }\r\n            },\r\n            computed: {\r\n                menuExpanded: {\r\n                    get() {\r\n                        console.log(this.$store.state.Layout.menuExpanded);\r\n                        return this.$store.state.Layout.menuExpanded;\r\n                    },\r\n                    set(value) {\r\n                        console.log(\"set computed value menu expanded\");\r\n                        this.$store.dispatch('Layout/changeMenuExpanded', value)\r\n                    }\r\n                }\r\n            },\r\n            mounted: function () {\r\n            },\r\n            methods: {},\r\n            created: function () {\r\n            },\r\n            destroyed: function () {\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n","Barba.Dispatcher.on(\"transitionCompleted\", function () {\r\n    if (document.getElementById('text')) {\r\n        Layout.components.text = new Vue({\r\n            el: document.getElementById(\"text\"),\r\n            store,\r\n            data: function () {\r\n                return {}\r\n            },\r\n            computed: {\r\n            },\r\n            mounted: function () {\r\n            },\r\n            methods: {},\r\n            created: function () {\r\n            },\r\n            destroyed: function () {\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n"]}